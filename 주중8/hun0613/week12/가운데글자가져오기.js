// 테스트 1 〉	통과 (0.03ms, 33.4MB)
// 테스트 2 〉	통과 (0.03ms, 33.4MB)
// 테스트 3 〉	통과 (0.03ms, 33.4MB)
// 테스트 4 〉	통과 (0.04ms, 33.4MB)
// 테스트 5 〉	통과 (0.04ms, 33.3MB)
// 테스트 6 〉	통과 (0.06ms, 33.4MB)
// 테스트 7 〉	통과 (0.03ms, 33.5MB)
// 테스트 8 〉	통과 (0.03ms, 33.5MB)
// 테스트 9 〉	통과 (0.03ms, 33.5MB)
// 테스트 10 〉	통과 (0.05ms, 33.4MB)
// 테스트 11 〉	통과 (0.04ms, 33.4MB)
// 테스트 12 〉	통과 (0.03ms, 33.4MB)
// 테스트 13 〉	통과 (0.04ms, 33.4MB)
// 테스트 14 〉	통과 (0.04ms, 33.4MB)
// 테스트 15 〉	통과 (0.04ms, 33.4MB)
// 테스트 16 〉	통과 (0.04ms, 33.4MB)

// 풀이시간 : 5분 31초
// 점수 : 1점


function solution(s) {
    // s : String
    // 정 가운데있는 글자 리턴
    
    // s의 길이가 짝수인지 홀수인지
    // 홀수라면
    // s의 length의 절반 -1
    // 짝수라면
    // s의 length 절반과 절반 -1
    
    return s.length % 2 === 0 ? s[Math.floor(s.length / 2) - 1] + s[Math.floor(s.length / 2)] : s[Math.floor(s.length / 2)];
}