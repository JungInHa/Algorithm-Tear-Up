function solution(n) {
  let answer = 0;
  // 주어진 자연수를 연속된 자연수의 합으로 표현하는 방법의 수
  // === 주어진 수의 홀수인 약수 갯수는 같다.

  for (i = 1; i <= n; i++) {
    // n%i > 나누었을 때 0이면 약수
    // 약수이면서 홀수여야하니까 i%2
    if (n % i === 0 && i % 2 === 1) answer++;
  }

  return answer;
}

// 5점~

// 정확성
// 테스트 1 〉	통과 (0.04ms, 33.6MB)
// 테스트 2 〉	통과 (0.07ms, 33.5MB)
// 테스트 3 〉	통과 (0.06ms, 33.4MB)
// 테스트 4 〉	통과 (0.09ms, 33.5MB)
// 테스트 5 〉	통과 (0.05ms, 33.6MB)
// 테스트 6 〉	통과 (0.06ms, 33.4MB)
// 테스트 7 〉	통과 (0.06ms, 33.5MB)
// 테스트 8 〉	통과 (0.05ms, 33.3MB)
// 테스트 9 〉	통과 (0.05ms, 33.5MB)
// 테스트 10 〉	통과 (0.13ms, 33.4MB)
// 테스트 11 〉	통과 (0.08ms, 33.5MB)
// 테스트 12 〉	통과 (0.06ms, 33.4MB)
// 테스트 13 〉	통과 (0.07ms, 33.6MB)
// 테스트 14 〉	통과 (0.06ms, 33.5MB)
// 테스트 15 〉	통과 (0.04ms, 33.5MB)
// 테스트 16 〉	통과 (0.04ms, 33.4MB)
// 테스트 17 〉	통과 (0.07ms, 33.6MB)
// 테스트 18 〉	통과 (0.05ms, 33.5MB)

// 효율성
// 테스트 1 〉	통과 (0.46ms, 33.1MB)
// 테스트 2 〉	통과 (0.35ms, 33MB)
// 테스트 3 〉	통과 (0.31ms, 33MB)
// 테스트 4 〉	통과 (0.38ms, 32.9MB)
// 테스트 5 〉	통과 (0.32ms, 33.1MB)
// 테스트 6 〉	통과 (0.42ms, 32.9MB)
